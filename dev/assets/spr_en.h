// Metaspriteset generated by mkts
// Copyleft 2015 The Mojon Twins
 
// Cell #0 cut from (0, 0) to (15, 15)

const unsigned char spr_en_00 [] = {
	0x00, 0x00, 0x81, 0x01, 0x08, 0x00, 0x82, 0x01, 
	0x00, 0x08, 0x83, 0x01, 0x08, 0x08, 0x84, 0x01, 
	0x80
};

// Cell #1 cut from (16, 0) to (31, 15)

const unsigned char spr_en_01 [] = {
	0x00, 0x00, 0x85, 0x01, 0x08, 0x00, 0x86, 0x01, 
	0x00, 0x08, 0x87, 0x01, 0x08, 0x08, 0x88, 0x01, 
	0x80
};

// Cell #2 cut from (32, 0) to (47, 15)

const unsigned char spr_en_02 [] = {
	0x00, 0x00, 0x89, 0x01, 0x08, 0x00, 0x8a, 0x01, 
	0x00, 0x08, 0x8b, 0x01, 0x08, 0x08, 0x8c, 0x01, 
	0x80
};

// Cell #3 cut from (48, 0) to (63, 15)

const unsigned char spr_en_03 [] = {
	0x00, 0x00, 0x89, 0x01, 0x08, 0x00, 0x8d, 0x01, 
	0x00, 0x08, 0x8e, 0x01, 0x08, 0x08, 0x8f, 0x01, 
	0x80
};

// Cell #4 cut from (64, 0) to (79, 15)

const unsigned char spr_en_04 [] = {
	0x00, 0x00, 0x90, 0x02, 0x08, 0x00, 0x91, 0x02, 
	0x00, 0x08, 0x92, 0x02, 0x08, 0x08, 0x93, 0x02, 
	0x80
};

// Cell #5 cut from (80, 0) to (95, 15)

const unsigned char spr_en_05 [] = {
	0x00, 0x00, 0x94, 0x02, 0x08, 0x00, 0x95, 0x02, 
	0x00, 0x08, 0x96, 0x02, 0x08, 0x08, 0x97, 0x02, 
	0x80
};

// Cell #6 cut from (96, 0) to (111, 15)

const unsigned char spr_en_06 [] = {
	0x00, 0x00, 0x98, 0x03, 0x08, 0x00, 0x99, 0x03, 
	0x00, 0x08, 0x9a, 0x03, 0x08, 0x08, 0x9b, 0x03, 
	0x80
};

// Cell #7 cut from (112, 0) to (127, 15)

const unsigned char spr_en_07 [] = {
	0x00, 0x00, 0x9c, 0x03, 0x08, 0x00, 0x9d, 0x03, 
	0x00, 0x08, 0x9e, 0x03, 0x08, 0x08, 0x9f, 0x03, 
	0x80
};

// Cell #8 cut from (128, 0) to (143, 15)

const unsigned char spr_en_08 [] = {
	0x00, 0x00, 0xa0, 0x03, 0x08, 0x00, 0xa1, 0x03, 
	0x00, 0x08, 0xa2, 0x03, 0x08, 0x08, 0xa3, 0x03, 
	0x80
};

// Cell #9 cut from (144, 0) to (159, 15)

const unsigned char spr_en_09 [] = {
	0x00, 0x00, 0xa4, 0x03, 0x08, 0x00, 0xa5, 0x03, 
	0x00, 0x08, 0xa6, 0x03, 0x08, 0x08, 0xa7, 0x03, 
	0x80
};

// Cell #10 cut from (160, 0) to (175, 15)

const unsigned char spr_en_0A [] = {
	0x00, 0x00, 0xa8, 0x02, 0x08, 0x00, 0xa9, 0x02, 
	0x00, 0x08, 0xaa, 0x02, 0x08, 0x08, 0xab, 0x02, 
	0x80
};


// Cell #11 cut from (0, 16) to (15, 31)

const unsigned char spr_en_0B [] = {
	0x00, 0x00, 0xac, 0x02, 0x08, 0x00, 0xad, 0x02, 
	0x00, 0x08, 0xae, 0x02, 0x08, 0x08, 0xaf, 0x02, 
	0x80
};

// Cell #12 cut from (16, 16) to (31, 31)

const unsigned char spr_en_0C [] = {
	0x00, 0x00, 0xb0, 0x02, 0x08, 0x00, 0xad, 0x02, 
	0x00, 0x08, 0xae, 0x02, 0x08, 0x08, 0xb1, 0x02, 
	0x80
};

// Cell #13 cut from (32, 16) to (47, 31)

const unsigned char spr_en_0D [] = {
	0x00, 0x00, 0xb2, 0x02, 0x08, 0x00, 0xb3, 0x02, 
	0x00, 0x08, 0xb4, 0x02, 0x08, 0x08, 0xb5, 0x02, 
	0x80
};

// Cell #14 cut from (48, 16) to (63, 31)

const unsigned char spr_en_0E [] = {
	0x00, 0x00, 0xb2, 0x02, 0x08, 0x00, 0xb6, 0x02, 
	0x00, 0x08, 0xb7, 0x02, 0x08, 0x08, 0xb5, 0x02, 
	0x80
};


// 55 patterns used from #129, Next = 184.

