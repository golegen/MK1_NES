// Patterns, tiles, metatiles, and maybe dragons. Generated by mkts
// Copyleft 2017 The Mojon Twins

// Metaspriteset generated by mkts [nes mode]
// Copyleft 2017 The Mojon Twins
 
// Each cell: A = normal, B = mirrored
 
// Cell #0 cut from (8, 8) to (23, 39)

const unsigned char sspl_00_a [] = {
	0xfc, 0xf8, 0x04, 0x00, 0x04, 0xf8, 0x05, 0x00, 
	0xfc, 0x00, 0x06, 0x00, 0x04, 0x00, 0x07, 0x00, 
	0xfc, 0x08, 0x08, 0x00, 0x04, 0x08, 0x09, 0x00, 
	0xfc, 0x10, 0x0a, 0x00, 0x04, 0x10, 0x0b, 0x00, 
	0x80
};
const unsigned char sspl_00_b [] = {
	0xfc, 0xf8, 0x05, 0x40, 0x04, 0xf8, 0x04, 0x40, 
	0xfc, 0x00, 0x07, 0x40, 0x04, 0x00, 0x06, 0x40, 
	0xfc, 0x08, 0x09, 0x40, 0x04, 0x08, 0x08, 0x40, 
	0xfc, 0x10, 0x0b, 0x40, 0x04, 0x10, 0x0a, 0x40, 
	0x80
};

// Cell #1 cut from (24, 8) to (39, 39)

const unsigned char sspl_01_a [] = {
	0xfc, 0xf8, 0x0c, 0x00, 0x04, 0xf8, 0x0d, 0x00, 
	0xfc, 0x00, 0x0e, 0x00, 0x04, 0x00, 0x0f, 0x00, 
	0xfc, 0x08, 0x10, 0x00, 0x04, 0x08, 0x11, 0x00, 
	0xfc, 0x10, 0x12, 0x00, 0x04, 0x10, 0x13, 0x00, 
	0x80
};
const unsigned char sspl_01_b [] = {
	0xfc, 0xf8, 0x0d, 0x40, 0x04, 0xf8, 0x0c, 0x40, 
	0xfc, 0x00, 0x0f, 0x40, 0x04, 0x00, 0x0e, 0x40, 
	0xfc, 0x08, 0x11, 0x40, 0x04, 0x08, 0x10, 0x40, 
	0xfc, 0x10, 0x13, 0x40, 0x04, 0x10, 0x12, 0x40, 
	0x80
};

// Cell #2 cut from (40, 8) to (55, 39)

const unsigned char sspl_02_a [] = {
	0xfc, 0xf8, 0x14, 0x00, 0x04, 0xf8, 0x15, 0x00, 
	0xfc, 0x00, 0x16, 0x00, 0x04, 0x00, 0x17, 0x00, 
	0xfc, 0x08, 0x18, 0x00, 0x04, 0x08, 0x19, 0x00, 
	0xfc, 0x10, 0x1a, 0x00, 0x04, 0x10, 0x1b, 0x00, 
	0x80
};
const unsigned char sspl_02_b [] = {
	0xfc, 0xf8, 0x15, 0x40, 0x04, 0xf8, 0x14, 0x40, 
	0xfc, 0x00, 0x17, 0x40, 0x04, 0x00, 0x16, 0x40, 
	0xfc, 0x08, 0x19, 0x40, 0x04, 0x08, 0x18, 0x40, 
	0xfc, 0x10, 0x1b, 0x40, 0x04, 0x10, 0x1a, 0x40, 
	0x80
};

// Cell #3 cut from (56, 8) to (71, 39)

const unsigned char sspl_03_a [] = {
	0xfc, 0xf8, 0x0c, 0x00, 0x04, 0xf8, 0x0d, 0x00, 
	0xfc, 0x00, 0x1c, 0x00, 0x04, 0x00, 0x1d, 0x00, 
	0xfc, 0x08, 0x1e, 0x00, 0x04, 0x08, 0x1f, 0x00, 
	0xfc, 0x10, 0x20, 0x00, 0x04, 0x10, 0x21, 0x00, 
	0x80
};
const unsigned char sspl_03_b [] = {
	0xfc, 0xf8, 0x0d, 0x40, 0x04, 0xf8, 0x0c, 0x40, 
	0xfc, 0x00, 0x1d, 0x40, 0x04, 0x00, 0x1c, 0x40, 
	0xfc, 0x08, 0x1f, 0x40, 0x04, 0x08, 0x1e, 0x40, 
	0xfc, 0x10, 0x21, 0x40, 0x04, 0x10, 0x20, 0x40, 
	0x80
};

// Cell #4 cut from (72, 8) to (87, 39)

const unsigned char sspl_04_a [] = {
	0xfc, 0xf8, 0x14, 0x00, 0x04, 0xf8, 0x15, 0x00, 
	0xfc, 0x00, 0x16, 0x00, 0x04, 0x00, 0x17, 0x00, 
	0xfc, 0x08, 0x22, 0x00, 0x04, 0x08, 0x23, 0x00, 
	0xfc, 0x10, 0x24, 0x00, 0x04, 0x10, 0x25, 0x00, 
	0x80
};
const unsigned char sspl_04_b [] = {
	0xfc, 0xf8, 0x15, 0x40, 0x04, 0xf8, 0x14, 0x40, 
	0xfc, 0x00, 0x17, 0x40, 0x04, 0x00, 0x16, 0x40, 
	0xfc, 0x08, 0x23, 0x40, 0x04, 0x08, 0x22, 0x40, 
	0xfc, 0x10, 0x25, 0x40, 0x04, 0x10, 0x24, 0x40, 
	0x80
};

// Cell #5 cut from (88, 8) to (103, 39)

const unsigned char sspl_05_a [] = {
	0xfc, 0xf8, 0x0c, 0x00, 0x04, 0xf8, 0x0d, 0x00, 
	0xfc, 0x00, 0x26, 0x00, 0x04, 0x00, 0x27, 0x00, 
	0xfc, 0x08, 0x28, 0x00, 0x04, 0x08, 0x29, 0x00, 
	0xfc, 0x10, 0x2a, 0x00, 0x04, 0x10, 0x2b, 0x00, 
	0x80
};
const unsigned char sspl_05_b [] = {
	0xfc, 0xf8, 0x0d, 0x40, 0x04, 0xf8, 0x0c, 0x40, 
	0xfc, 0x00, 0x27, 0x40, 0x04, 0x00, 0x26, 0x40, 
	0xfc, 0x08, 0x29, 0x40, 0x04, 0x08, 0x28, 0x40, 
	0xfc, 0x10, 0x2b, 0x40, 0x04, 0x10, 0x2a, 0x40, 
	0x80
};

// Cell #6 cut from (104, 8) to (119, 39)

const unsigned char sspl_06_a [] = {
	0xfc, 0xf8, 0x2c, 0x00, 0x04, 0xf8, 0x2d, 0x00, 
	0xfc, 0x00, 0x2e, 0x00, 0x04, 0x00, 0x2f, 0x00, 
	0xfc, 0x08, 0x30, 0x00, 0x04, 0x08, 0x31, 0x00, 
	0xfc, 0x10, 0x32, 0x00, 0x04, 0x10, 0x33, 0x00, 
	0x80
};
const unsigned char sspl_06_b [] = {
	0xfc, 0xf8, 0x2d, 0x40, 0x04, 0xf8, 0x2c, 0x40, 
	0xfc, 0x00, 0x2f, 0x40, 0x04, 0x00, 0x2e, 0x40, 
	0xfc, 0x08, 0x31, 0x40, 0x04, 0x08, 0x30, 0x40, 
	0xfc, 0x10, 0x33, 0x40, 0x04, 0x10, 0x32, 0x40, 
	0x80
};

// Each cell: A = normal, B = mirrored
 
// Cell cut from (120, 8) to (143, 39)

const unsigned char sspl_00_a [] = {
	0xfe, 0xf8, 0x34, 0x00, 0x06, 0xf8, 0x35, 0x00,                         
	0xfe, 0x00, 0x36, 0x00, 0x06, 0x00, 0x37, 0x00, 0x0e, 0x00, 0x38, 0x00, 
	0xfe, 0x08, 0x39, 0x00, 0x06, 0x08, 0x3a, 0x00,                         
	0xfe, 0x10, 0x3b, 0x00, 0x06, 0x10, 0x3c, 0x00,                         
	0x80
};
const unsigned char sspl_00_b [] = {
	                        0xfa, 0xf8, 0x35, 0x40, 0x02, 0xf8, 0x34, 0x40, 
	0xf2, 0x00, 0x38, 0x40, 0xfa, 0x00, 0x37, 0x40, 0x02, 0x00, 0x36, 0x40, 
	                        0xfa, 0x08, 0x3a, 0x40, 0x02, 0x08, 0x39, 0x40, 
	                        0xfa, 0x10, 0x3c, 0x40, 0x02, 0x10, 0x3b, 0x40, 
	0x80
};

// Each cell: A = normal, B = mirrored
 
// Cell cut from (144, 8) to (167, 39)

const unsigned char sspl_01_a [] = {
	0xfa, 0xf8, 0x3d, 0x00, 0x02, 0xf8, 0x3e, 0x00,                         
	0xfa, 0x00, 0x3f, 0x00, 0x02, 0x00, 0x40, 0x00, 0x0a, 0x00, 0x41, 0x00, 
	0xfa, 0x08, 0x42, 0x00, 0x02, 0x08, 0x43, 0x00, 0x0a, 0x08, 0x44, 0x00, 
	0xfa, 0x10, 0x45, 0x00, 0x02, 0x10, 0x46, 0x00,                         
	0x80
};
const unsigned char sspl_01_b [] = {
	                        0xfe, 0xf8, 0x3e, 0x40, 0x06, 0xf8, 0x3d, 0x40, 
	0xf6, 0x00, 0x41, 0x40, 0xfe, 0x00, 0x40, 0x40, 0x06, 0x00, 0x3f, 0x40, 
	0xf6, 0x08, 0x44, 0x40, 0xfe, 0x08, 0x43, 0x40, 0x06, 0x08, 0x42, 0x40, 
	                        0xfe, 0x10, 0x46, 0x40, 0x06, 0x10, 0x45, 0x40, 
	0x80
};

